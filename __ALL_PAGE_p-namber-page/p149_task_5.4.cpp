//	p149 task 5.4

#include <iostream>
#include <stdio.h> 
#include <math.h>

int main(int argc, char * argv[])
{

int kvo, i, n, nmin1, nmin2; 
double *X;
std::cout << " n = " ; 
std::cin >> n ;
X = new double [n]; 
std::cout << "Введите элементы массива for ( i = 0 ; i <n ; i ++) X\n" ;
std::cin >> X [ i ] ;
//Стандартный алгоритм поиска номера первого минимального элемента (nmin1). 
for(nmin1=0,i=1;i<n; i++)
if (X[i]<X[nmin1]) nmin1=i ;
//Второй этап — поиск номера минимального элемента среди элементов, номер 
//которых не совпадает nmin1. kvo — количество таких элементов. 
for(kvo=i=0;i<n; i++)
if(i!=nmin1) //Если номер текущего элемента не совпадает с nmin1,
{
kvo++; //увеличиваем количество таких элементов на 1.
//Номер первого элемента, индекс которого не равен nmin1,
//объявляем номером второго минимального элемента.
if ( kvo==1) nmin2=i ;
else
//очередной элемент, индекс которого не равен nmin1, сравниваем с минимальным, 
//если он меньше, номер перезаписываем в переменную nmin2.
if (X[i]<X[nmin2]) nmin2=i ;
}
//Вывод двух минимальных элементов и их индексов. 
std::cout<<"nmin1="<<nmin1<<"\tmin1="<<X[nmin1]<<std::endl ; 
std::cout<<"nmin2="<<nmin2<<"\tmin2="<<X[nmin2]<<std::endl ;

return 0 ;
}
